//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Lumenis.RemoteServiceApi.LumenisRemoteService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RemoteStatus", Namespace="http://schemas.datacontract.org/2004/07/LumenisRemoteService")]
    [System.SerializableAttribute()]
    public partial struct RemoteStatus : System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsConnectedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsEnabledField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsConnected {
            get {
                return this.IsConnectedField;
            }
            set {
                if ((this.IsConnectedField.Equals(value) != true)) {
                    this.IsConnectedField = value;
                    this.RaisePropertyChanged("IsConnected");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsEnabled {
            get {
                return this.IsEnabledField;
            }
            set {
                if ((this.IsEnabledField.Equals(value) != true)) {
                    this.IsEnabledField = value;
                    this.RaisePropertyChanged("IsEnabled");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="LumenisRemoteService.RemoteService")]
    public interface RemoteService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/RemoteService/GetStatus", ReplyAction="http://tempuri.org/RemoteService/GetStatusResponse")]
        Lumenis.RemoteServiceApi.LumenisRemoteService.RemoteStatus GetStatus();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/RemoteService/StartConnection", ReplyAction="http://tempuri.org/RemoteService/StartConnectionResponse")]
        void StartConnection();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/RemoteService/StopConnection", ReplyAction="http://tempuri.org/RemoteService/StopConnectionResponse")]
        void StopConnection();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/RemoteService/Enable", ReplyAction="http://tempuri.org/RemoteService/EnableResponse")]
        void Enable([System.ServiceModel.MessageParameterAttribute(Name="enable")] bool enable1);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/RemoteService/CreateFeature", ReplyAction="http://tempuri.org/RemoteService/CreateFeatureResponse")]
        void CreateFeature(int featureId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/RemoteService/HasFeature", ReplyAction="http://tempuri.org/RemoteService/HasFeatureResponse")]
        bool HasFeature(int featureId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/RemoteService/ExtendFeature", ReplyAction="http://tempuri.org/RemoteService/ExtendFeatureResponse")]
        bool ExtendFeature(int featureId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/RemoteService/RemoveFeature", ReplyAction="http://tempuri.org/RemoteService/RemoveFeatureResponse")]
        void RemoveFeature(int featureId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface RemoteServiceChannel : Lumenis.RemoteServiceApi.LumenisRemoteService.RemoteService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RemoteServiceClient : System.ServiceModel.ClientBase<Lumenis.RemoteServiceApi.LumenisRemoteService.RemoteService>, Lumenis.RemoteServiceApi.LumenisRemoteService.RemoteService {
        
        public RemoteServiceClient() {
        }
        
        public RemoteServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public RemoteServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RemoteServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RemoteServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Lumenis.RemoteServiceApi.LumenisRemoteService.RemoteStatus GetStatus() {
            return base.Channel.GetStatus();
        }
        
        public void StartConnection() {
            base.Channel.StartConnection();
        }
        
        public void StopConnection() {
            base.Channel.StopConnection();
        }
        
        public void Enable(bool enable1) {
            base.Channel.Enable(enable1);
        }
        
        public void CreateFeature(int featureId) {
            base.Channel.CreateFeature(featureId);
        }
        
        public bool HasFeature(int featureId) {
            return base.Channel.HasFeature(featureId);
        }
        
        public bool ExtendFeature(int featureId) {
            return base.Channel.ExtendFeature(featureId);
        }
        
        public void RemoveFeature(int featureId) {
            base.Channel.RemoveFeature(featureId);
        }
    }
}
